openapi: 3.1.0

info:
  title: Remind - API 
  description: |-
    Documentação da API para a aplicação App Remind.  

  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

servers:
  - url: http://localhost:3000/api-docs

security:
  - api_key: []
  - bearerAuth: []

tags:
  - name: User
    description: Operações relacionadas aos usuários.

components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization
      description: Chave de API (ex: `Bearer <api_key>`)
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /users/criar:
    post:
      tags:
        - User
      summary: Cria um novo usuário
      description: Cria um novo usuário com os dados fornecidos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutput'
        '400':
          description: Erro ao criar usuário. 
      security:
        - api_key: []
        - bearerAuth: []

  /users/login:
    post:
      tags:
        - User
      summary: Faz login com um usuário existente
      description: Faz login com as credenciais de um usuário existente.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Login bem-sucedido. Retorna informações do usuário e token de acesso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginOutput'
        '400':
          description: Credenciais inválidas. 
      security:
        - api_key: []

  /users/update/{id}:
    put:
      tags:
        - User
      summary: Atualiza um usuário existente
      description: Atualiza os detalhes de um usuário existente com base no ID fornecido.
      parameters:
        - in: path
          name: id
          description: ID do usuário a ser atualizado
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateInput'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutput'
        '400':
          description: Erro ao atualizar usuário. 
        '404':
          description: Usuário não encontrado. 
      security:
        - api_key: []
        - bearerAuth: []

  /users/get:
    get:
      tags:
        - User
      summary: Obtém todos os usuários
      description: Retorna uma lista de todos os usuários cadastrados.
      responses:
        '200':
          description: Lista de usuários recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOutput'
        '500':
          description: Erro interno do servidor ao buscar todos os usuários.
      security:
        - api_key: []
        - bearerAuth: []

  /users/get/{id}:
    get:
      tags:
        - User
      summary: Obtém um usuário pelo ID
      description: Retorna um usuário com base no ID fornecido.
      parameters:
        - in: path
          name: id
          description: ID do usuário a ser obtido
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutput'
        '404':
          description: Usuário não encontrado. 
        '500':
          description: Erro interno do servidor ao buscar o usuário por ID.
      security:
        - api_key: []
        - bearerAuth: []

  /users/delete/{id}:
    delete:
      tags:
        - User
      summary: Exclui um usuário pelo ID
      description: Exclui um usuário com base no ID fornecido.
      parameters:
        - in: path
          name: id
          description: ID do usuário a ser excluído
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuário excluído com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutput'
        '400':
          description: Erro ao excluir usuário.
        '404':
          description: Usuário não encontrado. 
        '500':
          description: Erro interno do servidor ao excluir o usuário por ID.
      security:
        - api_key: []
        - bearerAuth: []


